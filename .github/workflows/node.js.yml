name: CI

env:
  node-version: 18.x

on:
  push:
    branches:
      - master
      - development
  pull_request:
    branches:
      - prod
      - master
  workflow_dispatch:

jobs:
  Test-And-Build:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}

      - name: Installing Dependencies
        run: npm install

      - name: Installing nx
        run: npm add nx --global

      - name: Installing vitest
        run: npm add vitest --global

      - name: Running nx run-many lint
        run: npx nx run-many --target=lint --parallel=3

      - name: Running nx api test
        run: npx nx run-many --target=test --all=true --verbose=true --coverage=true --coverageReporters=lcov && node tools/scripts/merge.js

      - name: Running nx run-many build
        run: npx nx run-many --target=build --parallel=3

      - name: Upload dist folder
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Running nx run-many e2e
        run: npx nx run-many --target=e2e

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          files: ./coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}

  Deploy:
    needs: Test-And-Build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/development'
    steps:
      - uses: actions/checkout@v2

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Upload dist folder via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: dist/apps/cms-api/
          server-dir: public_html/your-app-folder/
          protocol: ftp

      - name: Install lftp
        run: sudo apt-get install lftp

      - name: Move files from public_ftp to uploads folder
        env:
          FTP_HOST: ${{ secrets.FTP_HOST }}
          FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
        run: |
          lftp -e "
            set ftp:ssl-allow no;
            open -u $FTP_USERNAME,$FTP_PASSWORD $FTP_HOST;
            lcd .;
            cd public_html/your-app-folder/;
            mv * ../../public_html/api/uploads/;
            bye
          "
